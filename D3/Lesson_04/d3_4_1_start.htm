<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Cartography - Lesson 4</title>
    <script src="https://d3js.org/d3.v6.js"></script>
    <style>
    </style>
    
    <script type="text/javascript">  
        function draw(geo_data) {
            let margin = 75,
                width = 1400 - margin,
                height = 600 - margin;

            let svg = d3.select("body").append("svg")
                .attr("width", width + margin)
                .attr("height", height + margin)
                .append('g')
                    .attr('class', 'map');

            let projection = d3.geoMercator();

            let path = d3.geoPath().projection(projection);

            svg.append("path")
                .attr("d", path(geo_data));
            
            // Modifique o fill, strokee stroke-widthpelas suas preferÃªncias. Usando o rgb(190,100,70)e uma linha preta de 1 pixel 

            svg.style("fill", "rgb(190,100,70)")
                .style("stroke","black")
                .style("stroke.width", 1)

            let parseTime = d3.timeParse("%d-%m-%Y (%H:%M h)");

            d3.tsv("./world_cup_geo.tsv")
                .then((data) => {
                        let newdata = data.map( d => {
                            d["attendance"] = +d["attendance"];
                            d["date"] = parseTime(d["date"]);
                            return d;
                        });
                        plot_circles(newdata)
                    });

            function plot_circles(data) { 
                    let grouping = d3.rollup(data, 
                        function(group) {
                            let total = d3.sum(group, g => g["attendance"]);
                            let coords = group.map( d => projection([+d.long, +d.lat]));
                            let centerx = d3.mean(coords, d => d[0]);
                            let centery = d3.mean(coords, d => d[1]);

                            return { 
                                "attendance" : +total,
                                "x": centerx,
                                "y": centery 
                            };
                        },
                        function(d){
                            return d["date"].getUTCFullYear()
                        }
                    );

                    console.table(grouping);
                    let attendance_extent = d3.extent(grouping, d => d[1]["attendance"] );
                    let radius_scale = d3.scaleSqrt()
                        .domain(attendance_extent)
                        .range([1,15]);

                    svg.append('g')
                        .attr("class", "attendance")
                    .selectAll("circle")
                    .data(grouping)
                    .join("circle")
                        .attr("cx", d => d[1].x)
                        .attr("cy", d => d[1].y)
                        .attr("r", d => radius_scale(d[1].attendance))
                    .style("fill", "black")
                    .style("opacity", 0.7)
                    .style("stroke", "black")
                    .style("stroke-width", 1)

            }
        };
    </script>
</head>
<body>
    <script type="text/javascript">
        d3.json("world_countries.json")
            .then(draw)
            .catch(err => { console.log(err) });
    </script>
</body>
</html>

