<!DOCTYPE html >
<html>

<head>
    <meta charset="utf-8">
    <script src="http://d3js.org/d3.v6.js"></script>
    <script>
        let width = 500;
        let height = 300;
        let margin = 50;
        
        function draw(data) {
            let svg = d3.select("body")
                .append("svg")
                .attr("width", width)
                .attr("height", height);

            let parsedData = [];
            data.forEach(function(d) {
                parsedData.push({Ano: d.Ano, Curso: 'MIECT', Numero_de_Alunos: +d.MIECT});
                parsedData.push({Ano: d.Ano, Curso: 'MIEET', Numero_de_Alunos: +d.MIEET});
                parsedData.push({Ano: d.Ano, Curso: 'LTSI', Numero_de_Alunos: +d.LTSI});
            });

            let y_extent = d3.extent(parsedData, d => d.Numero_de_Alunos);

            let yScale = d3.scaleLinear()
                .domain([0, y_extent[1]])
                .range([height - margin, margin]);

            let x_extent = parsedData.map(d => d.Ano);
            let xScale = d3.scalePoint()
                .domain(x_extent)
                .range([margin, width - margin]);

            let xAxis = d3.axisBottom()
                .scale(xScale);

            let yAxis = d3.axisLeft()
                .scale(yScale);

            svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + (height - margin) + ")")
                .call(xAxis);

            svg.append("g")
                .attr("class", "y axis")
                .attr("transform", "translate(" + margin + ",0)")
                .call(yAxis);

            svg.selectAll("circle")
                .data(parsedData)
                .join("circle")
                    .attr("cx", d => xScale(d.Ano))
                    .attr("cy", d => yScale(d.Numero_de_Alunos))
                    .attr("r", 10);

            // # title and axes labels
            svg.append("text")
                .attr("x", width / 2)
                .attr("y", margin / 2)
                .attr("text-anchor", "middle")
                .text("Alunos do MIECT por Ano")
                .style("fill", "red");

            svg.append("text")
                .attr("x", width / 2)
                .attr("y", height - margin / 3)
                .attr("text-anchor", "middle")
                .text("Anos do Curso");

            svg.append("text")
                .attr("transform", "rotate(-90)")
                .attr("x", - height / 2)
                .attr("y", margin / 3)
                .attr("text-anchor", "middle")
                .text("NÂº de Alunos");

            let line = d3.line()
                .x((d,i) => xScale(d.Ano))
                .y(d => yScale(d.Numero_de_Alunos));
            
            svg.append("path")
                .datum(parsedData.filter(d => d.Curso == 'MIECT'))
                .attr("class", "linha_alunos")
                .attr("d", line)
                .style("stroke", "steelblue");
            
            svg.append("path")
                .datum(parsedData.filter(d => d.Curso == 'MIEET'))
                .attr("class", "linha_alunos")
                .attr("d", line)
                .style("stroke", "green");

            svg.append("path")
                .datum(parsedData.filter(d => d.Curso == 'LTSI'))
                .attr("class", "linha_alunos")
                .attr("d", line)
                .style("stroke", "red");

            let colorScale = d3.scaleOrdinal()
                .domain(['MIECT', 'MIEET', 'LTSI'])
                .range(['steelblue', 'green', 'red']);

            let legend = svg.selectAll(".legend")
                .data(colorScale.domain())
                .enter()
                .append("g")
                    .attr("class", "legend")
                    .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

            legend.append("rect")
                .attr("x", width - 18)
                .attr("width", 18)
                .attr("height", 18)
                .style("fill", colorScale);

            legend.append("text")
                .attr("x", width - 24)
                .attr("y", 9)
                .attr("dy", ".35em")
                .style("text-anchor", "end")
                .text(d => d);
            
        }
    </script>
</head>

<body>
    <style>
        .axis path{
            fill:none;
            stroke: black;
        }
        .axis {
            font-size:8pt;
            font-family:sans-serif;
        }
        .tick {
            fill:none;
            stroke:black;
        }
        circle{
            stroke:black;
            stroke-width:0.5px;
            fill:RoyalBlue;
            opacity:0.6;
        }
        path {
            fill:none;
            stroke:black;
            stroke-width:2px;
        } 
        path.linha_alunos{
            stroke:DeepPink;
        }
    </style>
    <script>
        d3.json("./DETI_Dados_Candidatos.json")
            .then(draw)
            .catch(function(err){console.log(err)});
    </script>
</body>

</html>